"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.klaytnKmsService = void 0;
const tslib_1 = require("tslib");
const shared_blockchain_evm_based_1 = require("@tatumio/shared-blockchain-evm-based");
const api_client_1 = require("@tatumio/api-client");
const shared_blockchain_abstract_1 = require("@tatumio/shared-blockchain-abstract");
const shared_abstract_sdk_1 = require("@tatumio/shared-abstract-sdk");
const klaytnKmsService = (args) => {
    return Object.assign(Object.assign({}, (0, shared_blockchain_abstract_1.abstractBlockchainKms)(args)), { sign(tx, fromPrivateKey, provider) {
            return tslib_1.__awaiter(this, void 0, void 0, function* () {
                if (tx.chain !== api_client_1.Currency.KLAY) {
                    throw new shared_blockchain_evm_based_1.EvmBasedSdkError({ code: shared_abstract_sdk_1.SdkErrorCode.KMS_CHAIN_MISMATCH });
                }
                const client = args.web3.getClient(provider);
                const transactionConfig = JSON.parse(tx.serializedTransaction);
                if (!transactionConfig.gas) {
                    transactionConfig.gas = yield shared_blockchain_evm_based_1.evmBasedUtils.estimateGasLimit({
                        client,
                        tx: {
                            to: transactionConfig.to,
                            data: transactionConfig.data,
                        },
                        fromPrivateKey,
                    });
                }
                if (!transactionConfig.gasPrice ||
                    transactionConfig.gasPrice === '0' ||
                    transactionConfig.gasPrice === 0 ||
                    transactionConfig.gasPrice === '0x0') {
                    transactionConfig.gasPrice = yield args.web3.getGasPriceInWei();
                }
                const signedTransaction = yield client.eth.accounts.signTransaction(transactionConfig, fromPrivateKey);
                // @TODO: resolve undefined result
                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
                return signedTransaction.rawTransaction;
            });
        } });
};
exports.klaytnKmsService = klaytnKmsService;
//# sourceMappingURL=klaytn.kms.js.map