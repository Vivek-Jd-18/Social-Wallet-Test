"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.klaytnWeb3 = void 0;
const tslib_1 = require("tslib");
const api_client_1 = require("@tatumio/api-client");
const shared_blockchain_evm_based_1 = require("@tatumio/shared-blockchain-evm-based");
const shared_core_1 = require("@tatumio/shared-core");
const caver_js_1 = tslib_1.__importDefault(require("caver-js"));
const klaytnWeb3 = (args) => {
    const evmBasedWeb3Result = (0, shared_blockchain_evm_based_1.evmBasedWeb3)(args);
    const getKlaytnClient = (provider, fromPrivateKey) => {
        var _a;
        const endpoint = shared_core_1.httpHelper.rpcEndpoint(args.blockchain, api_client_1.OpenAPI.BASE, api_client_1.TATUM_API_CONSTANTS.API_KEY);
        const client = (_a = args.client) !== null && _a !== void 0 ? _a : new caver_js_1.default(provider || endpoint);
        if (fromPrivateKey) {
            client.klay.accounts.wallet.add(fromPrivateKey);
            client.klay.defaultAccount = client.klay.accounts.wallet[0].address;
        }
        return Object.assign(Object.assign({}, client), { eth: client.klay });
    };
    return Object.assign(Object.assign({}, evmBasedWeb3Result), { getClient(provider, fromPrivateKey) {
            return getKlaytnClient(provider, fromPrivateKey);
        },
        getGasPriceInWei(provider) {
            return tslib_1.__awaiter(this, void 0, void 0, function* () {
                const client = yield getKlaytnClient(provider);
                return yield client.eth.getGasPrice();
            });
        } });
};
exports.klaytnWeb3 = klaytnWeb3;
//# sourceMappingURL=klaytn.web3.js.map